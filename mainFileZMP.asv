clc;
clear;
close all;
addpath('./transforms');
addpath('./ZMP');
%% Forward kinematics
robot = importrobot('NUgus.urdf');
% smimport('NUgus.urdf')
robot.DataFormat = 'column';
close all;
show(robot);
com = centerOfMass(robot,homeConfiguration(robot));
hold on;
plot3(com(1),com(2),com(3),'o');
%% Params
p = gaitParameters(robot);
%% ZMP Trajectory
[com_x, com_y, zmp_x, zmp_y] = generateCoMTraj(p);
p.com_x = com_x;
p.com_y = com_y;
p.zmp_x = zmp_x;
p.zmp_y = zmp_y;
%% For loop
p.support_foot = 'left_foot';
p.swingFoot = 'right_foot';
is_half_step = true;
opt_joint_angles = [];
for i=1:(length(p.footstep)- 2)
    p.stepCount = i;   
    %get swing foot trajectory
    foot_traj_1 = generateFootTrajectory(p,is_half_step);
    %get com traj for step
    rCdWw = [com_x((i-1)*p.N+1:p.N*i);com_y((i-1)*p.N+1:p.N*i);zeros(1,p.N)];
    %perform inverse kinematics
    opt_joint_angles = [opt_joint_angles inverseKinematicsZMP(p,foot_traj_1,rCdWw)];
    %switch feet
    if(p.support_foot == "left_foot")
        p.support_foot = 'right_foot';
        p.swingFoot = 'left_foot';
    else
        p.support_foot = 'left_foot';
        p.swingFoot = 'right_foot';
    end
    is_half_step = false;
end

%% Plot Walking
% Plot first step
figure
for i=1:(length(p.footstep)- 2)
    param.support_foot = 'left_foot';
    param.swingFoot = 'right_foot';
    plotWalk(opt_joint_angles((i-1)*p.N+1:p.N*i,robot,param);


%% Plot Data
% % Plot first step
% p.support_foot = 'left_foot';
% p.swingFoot = 'right_foot';
% rCPp1 = plotData(opt_joint_angles_1,p,foot_traj_1);
% % Plot 2nd step
% p.support_foot = 'right_foot';
% p.swingFoot = 'left_foot';
% rCPp2 =plotData(opt_joint_angles_2,p,foot_traj_2);
% % Plot 3rd step
% p.support_foot = 'left_foot';
% p.swingFoot = 'right_foot';
% rCPp3 = plotData(opt_joint_angles_3,p,foot_traj_3);
% rCPp = [rCPp1 rCPp2 rCPp3];
% plotZMP(p,rCPp);

%% Pack servo positions
servo_positions = [opt_joint_angles_1,opt_joint_angles_2,opt_joint_angles_3];
save('servo_positions.mat');
out=servo_positions(:);